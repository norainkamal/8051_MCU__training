C51 COMPILER V9.60.7.0   MAIN                                                              08/22/2024 15:42:46 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include "lcd.h"
   3          #include "delay.h"
   4          
   5           
   6          #define dataport P0       // LCD dataport connected to PORT1
   7          sbit rs = P2^6;  //RS pin connected to pin 2 of port 3
   8          sbit rw = P2^5;  // RW pin connected to pin 3 of port 3
   9          sbit en  =  P2^7;
  10           
  11           
  12           
  13          /* 16x2 lcd Specification */
  14          #define LCDMaxLines 2
  15          #define LCDMaxChars 16
  16          #define LineOne 0x80
  17          #define LineTwo 0xc0
  18           
  19          #define BlankSpace ' '
  20           
  21          //LCD initilization
  22          void LCD_Init()
  23          {
  24   1          delay_us(5000);
  25   1         lcd_WriteCmd(0x02);  //initilize the LCD in 4bit Mode
  26   1         lcd_WriteCmd(0x28);
  27   1         lcd_WriteCmd(0x0C);  // display ON cursor ON
  28   1         lcd_WriteCmd(0x01);  // clear the LCD
  29   1         lcd_WriteCmd(0x80);  // move the Cursor to First line First Position
  30   1       
  31   1      }
  32           
  33           
  34          // lcd Write command function
  35          void lcd_WriteCmd( char a)
  36          {
  37   1       
  38   1         dataport=(a & 0xf0);        
  39   1         rs=0;                      
  40   1         rw=0;                 
  41   1         en=1;                 
  42   1         delay_us(1);
  43   1         en=0;
  44   1         delay_us(1);                  
  45   1         dataport=((a<<4) & 0xf0);   
  46   1         rs=0;                    
  47   1         rw=0;                    
  48   1         en=1;                      
  49   1         delay_us(1);
  50   1         en=0;
  51   1         delay_us(1);
  52   1      }
  53           
  54           
C51 COMPILER V9.60.7.0   MAIN                                                              08/22/2024 15:42:46 PAGE 2   

  55           // lcd writedata function
  56          void lcd_Writedata( char a)
  57          {
  58   1       
  59   1       
  60   1         dataport=(a & 0xf0);        
  61   1           rs=1;                      
  62   1           rw=0;                      
  63   1           en=1;                      
  64   1          delay_us(1);
  65   1           en=0;
  66   1       
  67   1         delay_us(1);                
  68   1       
  69   1         dataport=((a <<4) & 0xf0);  
  70   1           rs=1;                    
  71   1           rw=0;                     
  72   1           en=1;                      
  73   1          delay_us(1);
  74   1           en=0;
  75   1       
  76   1         delay_us(1);
  77   1       
  78   1      }
  79          
  80           
  81           //lcd gotolinetwo fuction
  82          void lcd_GoToLineTwo()
  83          {
  84   1         lcd_WriteCmd(LineTwo);   // move the Cursor to Second line First Position
  85   1      }
  86           
  87           
  88           
  89          //lcd go to X(first row), Y(second row) line
  90          void lcd_GoToXY(char row, char col)
  91          {
  92   1         char pos;
  93   1       
  94   1          if(row<LCDMaxLines)
  95   1            {
  96   2               pos= LineOne | (row << 6);
  97   2                                          
  98   2       
  99   2              if(col<LCDMaxChars)
 100   2                 pos= pos+col;            
 101   2                                          
 102   2       
 103   2               lcd_WriteCmd(pos);        
 104   2             }
 105   1      }
 106           
 107          
 108          //lcd display string function
 109          void lcd_DisplayString(char *string_ptr)
 110          {
 111   1         while(*string_ptr)
 112   1          lcd_Writedata(*string_ptr++);
 113   1          }
 114           
 115           
 116          //lcd display rtc time function
C51 COMPILER V9.60.7.0   MAIN                                                              08/22/2024 15:42:46 PAGE 3   

 117          void lcd_DisplayRtcTime(char hour,char min,char sec)
 118          {
 119   1        char t=0x01;
 120   1        if((hour&0x80)==0)
 121   1          t=0x03;
 122   1          lcd_Writedata(((hour>>4) & t) + 0x30);
 123   1          lcd_Writedata((hour & 0x0f) + 0x30);
 124   1          lcd_Writedata(':');
 125   1       
 126   1          lcd_Writedata(((min>>4) & 0x0f) + 0x30);
 127   1          lcd_Writedata((min & 0x0f) + 0x30);
 128   1          lcd_Writedata(':');
 129   1       
 130   1          lcd_Writedata(((sec>>4) & 0x0f) + 0x30);
 131   1          lcd_Writedata((sec & 0x0f) + 0x30);
 132   1       
 133   1       }
 134           
 135           
 136           // lcd display rtc date function
 137          void lcd_DisplayRtcDate(char day,char month,char year)
 138           {
 139   1           lcd_Writedata(((day>>4) & 0x0f) + 0x30);
 140   1           lcd_Writedata((day & 0x0f) + 0x30);
 141   1           lcd_Writedata('/');
 142   1       
 143   1           lcd_Writedata(((month>>4) & 0x0f) + 0x30);
 144   1           lcd_Writedata((month & 0x0f) + 0x30);
 145   1           lcd_Writedata('/');
 146   1       
 147   1           lcd_Writedata(((year>>4) & 0x0f) + 0x30);
 148   1           lcd_Writedata((year & 0x0f) + 0x30);
 149   1       
 150   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    386    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
