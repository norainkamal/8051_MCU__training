C51 COMPILER V9.60.7.0   RTC                                                               08/21/2024 12:23:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE RTC
OBJECT MODULE PLACED IN .\Objects\rtc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE rtc.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\rtc.l
                    -st) TABS(2) OBJECT(.\Objects\rtc.obj)

line level    source

   1          #include "rtc.h"
   2          
   3          void RTC_Init(void) {
   4   1          CE = 0;   // Disable RTC
   5   1          SCLK = 0; // Set clock low
   6   1      }
   7          
   8          void RTC_WriteTimeDate(unsigned char timeDate[7]) {
   9   1          unsigned char i;
  10   1          CE = 1;  // Enable RTC
  11   1          Send_Byte(0xBE);  // Command for burst write
  12   1      
  13   1          for(i = 0; i < 7; i++) {
  14   2              Send_Byte(timeDate[i]);
  15   2          }
  16   1      
  17   1          CE = 0;  // Disable RTC
  18   1      }
  19          
  20          void RTC_ReadTimeDate(unsigned char timeDate[7]) {
  21   1          unsigned char i;
  22   1          CE = 1;  // Enable RTC
  23   1          Send_Byte(0xBF);  // Command for burst read
  24   1      
  25   1          for(i = 0; i < 7; i++) {
  26   2              timeDate[i] = Receive_Byte();
  27   2          }
  28   1      
  29   1          CE = 0;  // Disable RTC
  30   1      }
  31          
  32          void Send_Byte(unsigned char byte) {
  33   1          unsigned char i;
  34   1          for(i = 0; i < 8; i++) {
  35   2              IO = byte & 0x01;  // Send LSB first
  36   2              SCLK = 1;
  37   2              byte >>= 1;  // Shift right for next bit
  38   2              SCLK = 0;
  39   2          }
  40   1      }
  41          
  42          unsigned char Receive_Byte(void) {
  43   1          unsigned char i, receivedData = 0;
  44   1      
  45   1          for(i = 0; i < 8; i++) {
  46   2              receivedData >>= 1;  // Shift to prepare for next bit
  47   2              if(IO) receivedData |= 0x80;  // Read data bit
  48   2              SCLK = 1;
  49   2              SCLK = 0;
  50   2          }
  51   1      
  52   1          return receivedData;
  53   1      }

C51 COMPILER V9.60.7.0   RTC                                                               08/21/2024 12:23:02 PAGE 2   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
